<?xml version="1.0"?>
<!--********************************************************************************
 * CruiseControl, a Continuous Integration Toolkit
 * Copyright (c) 2001, ThoughtWorks, Inc.
 * 651 W Washington Ave. Suite 500
 * Chicago, IL 60661 USA
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 *     + Redistributions of source code must retain the above copyright 
 *       notice, this list of conditions and the following disclaimer. 
 *       
 *     + Redistributions in binary form must reproduce the above 
 *       copyright notice, this list of conditions and the following 
 *       disclaimer in the documentation and/or other materials provided 
 *       with the distribution. 
 *       
 *     + Neither the name of ThoughtWorks, Inc., CruiseControl, nor the 
 *       names of its contributors may be used to endorse or promote 
 *       products derived from this software without specific prior 
 *       written permission. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ********************************************************************************-->
<project name="HelloWorld" basedir="." default="all">

    <property name="build.compiler" value="jikes"/>
    <property name="build.compiler.emacs" value="true"/>
    <property name="build.dir" value="classes"/>
    <property name="dist.dir" value="dist"/>
    <property name="masterbuild.logdir" value="logs"/>
    <property name="source.dir" value="src"/>
    <property name="junit.results" value="test-results"/>
    
    <property name="ccdir" value="REPLACE WITH CC DIRECTORY"/>
    <property name="vss.login" value=""/>
    <property name="vss.password" value=""/>
    <property name="vss.src.path" value="/src"/>
    <property name="vss.executable.dir" value="REPLACE with VSS executable directory"/>
    <property name="vss.src.changed" value="false"/>
    <property name="vss.src.delete" value="false"/>
    
    <path id="classpath">
        <fileset dir="${ccdir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    
    <target name="init" description="Prepare for build">
        <tstamp/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${masterbuild.logdir}"/>
    </target>
    
    <target name="clean" description="Clean all build products">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>
    
    <target name="compile" depends="init" description="Compile application without cleaning">
        <javac srcdir="${source.dir}" destdir="${build.dir}" classpathref="classpath" includes="**/*.java" debug="true" deprecation="true"/>
    </target>
    
    <target name="test" depends="init" description="Run unit tests">
        <delete dir="${junit.results}"/>
        <mkdir dir="${junit.results}"/>
        <echo message="Running unit tests..."/>
        <junit fork="yes" haltonfailure="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.dir}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${junit.results}">
                <fileset dir="${build.dir}" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>
    
    <target name="jar">
        <jar jarfile="${dist.dir}\helloWorld.jar">
            <fileset dir="${build.dir}"/>
        </jar>
    </target>
    
    <target name="all" depends="init,clean,compile,test,jar" description="Build application">
        <echo message="Application built!"/>
    </target>

    <target name="vssget" description="gets the latest source from vss" if="vss.src.changed" 
     depends="init, modificationcheck">
        <vssget login="${vss.login},${vss.password}" ssdir="${vss.executable.dir}" 
         vsspath="${vss.src.path}" localPath="${source.dir}" recursive="true" writable="false"/>
    </target>
    
    <target name="labelbuild">
        <vsslabel login="${vss.login},${vss.password}" ssdir="${vss.executable.dir}" 
         vsspath="${vss.src.path}" label="${label}"/>
    </target>
    
    <target name="modificationcheck" depends="init" description="Check modifications since last build">
        <taskdef name="modificationset" classname="net.sourceforge.cruisecontrol.ModificationSet"/>
        <echo message="Checking for modifications..."/>
        <modificationset lastbuild="${lastBuildAttemptTime}" quietperiod="30" 
         dateformat="yyyy-MMM-dd HH:mm:ss">
            <vsselement ssdir="${vss.src.path}" login="${vss.login},${vss.password}" 
             property="vss.src.changed" propertyOnDelete="vss.src.delete"/>
        </modificationset>
    </target>
    
    <target name="masterbuild" depends="modificationcheck,vssget,compile,test,jar,labelbuild" 
     description="Cruise control master build"/>
     
    <target name="cleanbuild" depends="clean,masterbuild" description="Cruise control clean build"/>
    
</project>
