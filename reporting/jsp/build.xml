<!--********************************************************************************
 * CruiseControl, a Continuous Integration Toolkit
 * Copyright (c) 2001, ThoughtWorks, Inc.
 * 651 W Washington Ave. Suite 500
 * Chicago, IL 60661 USA
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *     + Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     + Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *
 *     + Neither the name of ThoughtWorks, Inc., CruiseControl, nor the
 *       names of its contributors may be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ********************************************************************************-->
<project name="reporting-jsp" default="war" basedir=".">
    <property file="override.properties"/>

    <property name="dist" value="dist"/>
    <property name="lib" value="lib"/>
    <property name="src" value="src"/>
    <property name="classes" value="classes"/>
    <property name="temp.dir" value="tmp"/>
    <property name="docs" value="docs"/>
    <property name="test" value="test"/>
    <property name="test.results" value="testresults"/>
    <property name="tests" value="*Test"/>

    <property name="checkstyle.jar" value="${lib}/checkstyle-all-3.0.jar"/>

    <target name="clean">
        <delete dir="${dist}"/>
        <delete dir="${classes}"/>
        <delete dir="${test.results}"/>
        <delete dir="${temp.dir}"/>
    </target>

    <target name="init" depends="clean">
        <mkdir dir="${dist}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${test.results}"/>
        <mkdir dir="${temp.dir}"/>
    </target>

    <!-- **************************************************** -->
    <!-- Run style check on code -->
    <!-- **************************************************** -->
    <target name="checkstyle" description="Generates a report of code convention violations.">
        <taskdef resource="checkstyletask.properties" classpath="${checkstyle.jar}"/>
        <checkstyle config="checkstyle.xml" failOnViolation="true">
            <formatter type="plain" tofile="checkstyleResults.txt"/>
            <fileset dir="src" includes="**/*.java"/>
            <fileset dir="test" includes="**/*.java"/>
        </checkstyle>
    </target>

    <target name="compile" depends="init,checkstyle">
        <javac srcdir="${src}" destdir="${classes}" debug="true">
            <classpath>
                <pathelement location="${lib}/servlet.jar"/>
                <pathelement location="${lib}/xalan.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile" description="Executes the unit tests">
        <javac srcdir="${test}" destdir="${classes}">
            <classpath>
                <pathelement location="${lib}/servlet.jar"/>
                <pathelement location="${lib}/xalan.jar"/>
                <pathelement location="${lib}/junit.jar"/>
            </classpath>
        </javac>
        <junit fork="yes" haltonfailure="yes" printsummary="on">
            <classpath>
                <pathelement location="${lib}/servlet.jar"/>
                <pathelement location="${lib}/xalan.jar"/>
                <pathelement location="${lib}/junit.jar"/>
                <pathelement location="${classes}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <formatter type="xml"/>
            <batchtest todir="${test.results}" >
                <fileset dir="${classes}" includes="**/${tests}.class" />
            </batchtest>
        </junit>
    </target>

    <target name="create-web-xml"  depends="-set.log.dir, -set.status.file, -set.artifacts.dir">
        <filter token="YOUR CRUISECONTROL LOG DIRECTORY" value="${user.log.dir}" />
        <filter token="CURRENT BUILD STATUS FILE" value="${user.build.status.file}" />
        <filter token="cruise.build.artifacts.dir" value="${cruise.build.artifacts.dir}"/>
        <copy filtering="true" todir="${temp.dir}" file="WEB-INF/web.xml" />
    </target>

    <target name="-set.log.dir" unless="user.log.dir">
        <input message="WARNING! Property user.log.dir not set!  Please enter the absolute path to the CruiseControl logs directory:"
            addproperty="user.log.dir"/>
    </target>

    <target name="-set.status.file" unless="user.build.status.file">
        <input message="WARNING! Property user.build.status.file not set!  Please enter the absolute path to the current build status file:"
            addproperty="user.build.status.file"/>
    </target>

    <target name="-set.artifacts.dir" unless="cruise.build.artifacts.dir">
        <input message="WARNING! Property cruise.build.artifacts.dir not set!  Please enter the absolute path to the directory where additional build artifacts are stored:"
            addproperty="cruise.build.artifacts.dir"/>
    </target>
    
    <target name="war" depends="test,create-web-xml">
        <war warfile="${dist}/cruisecontrol.war" webxml="${temp.dir}/web.xml">
            <fileset dir=".">
                <exclude name="samplelogs/_cache/"/>
                <exclude name="${dist}/"/>
                <exclude name="WEB-INF/web.xml"/>
                <exclude name="src/"/>
                <exclude name="test/"/>
                <exclude name="${lib}/"/>
                <exclude name="${classes}/"/>
                <exclude name="${temp.dir}/"/>
            </fileset>
            <lib dir="${lib}">
                <include name="xalan.jar"/>
                <include name="xerces.jar"/>
            </lib>
            <classes dir="${classes}"/>
        </war>
    </target>

</project>
