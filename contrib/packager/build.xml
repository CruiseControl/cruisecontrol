<project name="cruisecontrol.packager" default="package" basedir=".">

    <property name="config.webapp" value="cruisecontrol.war"/>
    <property name="config.name" value="cruisecontrol"/>
    <property name="config.summary" value="A continuous integration build loop"/>
    <property name="config.spec.src" value="${basedir}/cruisecontrol.spec"/>
    <property name="config.desc" value="Cruisecontrol allows automated hands-off building of software in a continuous integration environment."/>
    <property name="config.webapps.dir" value="/usr/share/tomcat/webapps"/>
    <property name="config.runtime.user" value="cruise"/>
    <property name="config.runtime.group" value="${config.runtime.user}"/>

    <property name="cruisecontrol" value="../.."/>
    <property name="cruisecontrol.main" value="${cruisecontrol}/main"/>
    <property name="cruisecontrol.reporting" value="${cruisecontrol}/reporting/jsp"/>
    <property name="cruisecontrol.reporting.webapp" value="${cruisecontrol.reporting}/dist/${config.webapp}"/>

    <property name="build.dir" value="${basedir}/build"/>

    <property name="install.docs" value="${build.dir}/usr/share/doc/${config.name}"/>
    <property name="install.share" value="${build.dir}/usr/share/${config.name}"/>
    <property name="install.bin" value="${install.share}/bin"/>
    <property name="install.dist" value="${install.share}/dist"/>
    <property name="install.lib" value="${install.share}/lib"/>
    <property name="install.webapps" value="${install.share}/webapps/cruisecontrol"/>
    <property name="install.etc" value="${build.dir}/etc"/>

    <property name="reporting.override.file" value="override.properties"/>

    <property prefix="reporting" file="${reporting.override.file}"/>

    <property prefix="cc.build" file="${basedir}/../../build.properties"/>
    <property name="config.version" value="${cc.build.cc.version}"/>

    <property prefix="package" file="package.properties"/>

    <available file="/usr/bin/rpmbuild" property="rpmbuild.available"/>
    <available file="/usr/bin/dpkg" property="dpkg.available"/>

    <filterset id="packageInfoFilterSet">
        <filter token="VERSION" value="${config.version}"/>
        <filter token="RELEASE" value="${config.release}"/>
        <filter token="SUMMARY" value="${package.summary}"/>
        <filter token="DESCRIPTION" value="${package.description}"/>
        <filter token="ROOT" value="${build.dir}"/>
    </filterset>    

    <target name="clean" description="deletes old builds">
        <delete failOnError="true" includeEmptyDirs="true" dir="${build.dir}"/>
        <delete file="cruisecontrol-${config.version}-${config.release}.noarch.rpm"/>
        <delete file="cruisecontrol_${config.version}-${config.release}.deb"/>
        <delete file="cruisecontrol.spec"/>
        <ant dir="${cruisecontrol.main}" target="clean" inheritAll="false"/>
        <ant dir="${cruisecontrol.reporting}" target="clean" inheritAll="false">
            <property name="basedir" value="${cruisecontrol.reporting}"/>
            <property name="checkstyle.fail.on.violation" value="false"/>
        </ant>
    </target>

    <target name="-init" description="makes required dirs, etc." depends="clean">
        <fail message="please specify config.release property on the command line" unless="config.release"/>
        <echo message="Using version number: ${config.version}"/>
        <echo message="You can over-ride this by specifying -Dconfig.version when invoking Ant"/>
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="install" depends="build" description="deploy to the build dir">
        <mkdir dir="${install.share}"/>
        <mkdir dir="${install.docs}"/>
        <copy todir="${install.dist}">
            <fileset dir="${cruisecontrol.main}/dist"/>
        </copy>
        <copy todir="${install.lib}">
            <fileset dir="${cruisecontrol.main}/lib"/>
        </copy>
        <copy todir="${install.docs}">
            <fileset dir="${cruisecontrol}/docs"/>
        </copy>
        <copy todir="${install.docs}/main">
            <fileset dir="${cruisecontrol.main}/docs"/>
        </copy>
        <copy todir="${install.docs}/reporting">
            <fileset dir="${cruisecontrol.reporting}/docs"/>
        </copy>
        <copy todir="${install.bin}">
            <fileset file="${cruisecontrol.main}/bin/cruisecontrol.sh"/>
            <fileset file="usr/bin/cruisecontrol"/>
        </copy>
        <copy todir="${install.share}" file="${cruisecontrol}/license.txt"/>
        <copy todir="${install.dist}" file="${cruisecontrol.reporting.webapp}"/>

        <unzip src="${cruisecontrol.reporting.webapp}" dest="${install.webapps}"/>

        <copy todir="${install.etc}">
            <fileset dir="${basedir}/etc" defaultexcludes="yes"/>
        </copy>

        <mkdir dir="${build.dir}/usr/bin"/>
        <exec executable="chmod" failonerror="true">
            <arg value="a+x"/>
            <arg value="${build.dir}/usr/share/cruisecontrol/bin/cruisecontrol"/>
            <arg value="${build.dir}/usr/share/cruisecontrol/bin/cruisecontrol.sh"/>
            <arg value="${build.dir}/etc/init.d/cruisecontrol"/>
        </exec>
        <symlink link="${build.dir}/usr/bin/cruisecontrol" resource="../share/cruisecontrol/bin/cruisecontrol"/>

        <mkdir dir="${build.dir}/${reporting.user.log.dir}"/>
        <mkdir dir="${build.dir}/${reporting.cruise.build.artifacts.dir}"/>
        <mkdir dir="${build.dir}/${reporting.cruise.checkout.dir}"/>

        <mkdir dir="${build.dir}/var/cache/cruisecontrol"/>
        <mkdir dir="${build.dir}/var/log/cruisecontrol"/>
        <mkdir dir="${build.dir}/var/run"/>
        <touch file="${build.dir}/var/run/cruisecontrol.pid"/>
    </target>

    <target name="build" description="dummy build target" depends="build.main, build.report"/>

    <target name="build.main" description="builds cruisecontrol main ">
        <ant dir="${cruisecontrol.main}" target="jar" inheritAll="false"/>
    </target>

    <target name="build.report" description="builds the cruisecontrol reporting app">
        <copy file="${reporting.override.file}" toDir="${cruisecontrol.reporting}"/>
        <ant dir="${cruisecontrol.reporting}" target="war" inheritAll="false">
            <property name="basedir" value="${cruisecontrol.reporting}"/>
            <property name="checkstyle.fail.on.violation" value="false"/>
        </ant>
    </target>

    <target name="deb" depends="pre-package" if="dpkg.available">
        <mkdir dir="${build.dir}/DEBIAN"/>
        <copy file="debian/control" todir="${build.dir}/DEBIAN">
            <filterset refid="packageInfoFilterSet"/>
        </copy>
        <exec executable="cp" failonerror="true">
            <arg value="debian/postinst"/>
            <arg value="${build.dir}/DEBIAN"/>
        </exec>
        <exec executable="chmod" failonerror="true">
            <arg value="a+x"/>
            <arg value="${build.dir}/DEBIAN/postinst"/>
        </exec>
        <exec executable="dpkg" failonerror="true">
            <arg value="-b"/>
            <arg value="build"/>
            <arg value="cruisecontrol_${config.version}-${config.release}.deb"/>
        </exec>
    </target>

    <target name="rpm" depends="pre-package" if="rpmbuild.available">
        <copy file="redhat/cruisecontrol.spec" todir=".">
            <filterset refid="packageInfoFilterSet"/>
        </copy>
        <concat destfile="cruisecontrol.spec" append="true">
            <filelist dir="debian" files="postinst"/>
        </concat>
        <delete dir="${build.dir}/DEBIAN"/>
        <exec executable="rpmbuild" failonerror="true">
            <arg value="-bb"/>
            <arg value="--target"/>
            <arg value="noarch"/>
            <arg value="cruisecontrol.spec"/>
        </exec>
    </target>

    <target name="pre-package" description="Prep directory for packaging" depends="-init,install,build">
    </target>

    <target name="package" depends="deb,rpm">
    </target>

</project>
