<project name="cruisecontrol.rpm" default="rpm" basedir=".">

    <property name="config.webapp" value="cruisecontrol.war"/>
    <property name="config.name" value="cruisecontrol"/>
    <property name="config.summary" value="A continuous integration build loop"/>
    <property name="config.spec.src" value="${basedir}/cruisecontrol.spec"/>
    <property name="config.desc" value="Cruisecontrol allows automated hands-off building of software in a continuous integration environment."/>
    <property name="config.webapps.dir" value="/usr/share/tomcat/webapps"/>
    <property name="config.runtime.user" value="cruise"/>
    <property name="config.runtime.group" value="${config.runtime.user}"/>

    <property name="cruisecontrol" value="../../../cruisecontrol"/>
    <property name="cruisecontrol.main" value="${cruisecontrol}/main"/>
    <property name="cruisecontrol.reporting" value="${cruisecontrol}/reporting/jsp"/>
    <property name="cruisecontrol.reporting.webapp" value="${cruisecontrol.reporting}/dist/${config.webapp}"/>


    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.rpm.root" value="${build.dir}/rpmbuild"/>
    <property name="build.spec.dir" value="${build.rpm.root}/SPECS"/>
    <property name="build.rpmbuild.dir" value="${build.rpm.root}/BUILD"/>
    <property name="build.rpmdist.dir" value="${build.rpm.root}/RPMS"/>
    <property name="build.spec" value="${build.spec.dir}/cruisecontrol.spec"/>
    <property name="build.files" value="${build.dir}/files-${config.name}.rpm"/>

    <property name="install.docs" value="${build.rpm.root}/usr/share/doc/${config.name}"/>
    <property name="install.share" value="${build.rpm.root}/usr/share/${config.name}"/>
    <property name="install.bin" value="${install.share}/bin"/>
    <property name="install.dist" value="${install.share}/dist"/>
    <property name="install.lib" value="${install.share}/lib"/>

    <property name="reporting.override.file" value="override.properties"/>

    <property prefix="reporting" file="${reporting.override.file}"/>

    <target name="clean" description="deletes old builds and rpms">
        <delete failOnError="true" includeEmptyDirs="true" dir="${build.dir}"/>
    </target>

    <target name="-init" description="makes required dirs, etc." depends="clean">
        <fail message="please specify config.version property on the command line" unless="config.version"/>
        <fail message="please specify config.release property on the command line" unless="config.release"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.rpm.root}"/>
        <mkdir dir="${build.rpmbuild.dir}"/>
        <mkdir dir="${build.rpmdist.dir}"/>
    </target>

    <target name="install" depends="build" description="deploy to the rpm build dir">
        <mkdir dir="${install.share}"/>
        <mkdir dir="${install.docs}"/>
        <copy todir="${install.dist}" file="${cruisecontrol.main}/dist/cruisecontrol.jar"/>
        <copy todir="${install.lib}">
            <fileset dir="${cruisecontrol.main}/lib"/>
        </copy>
        <copy todir="${install.docs}">
            <fileset dir="${cruisecontrol}/docs"/>
        </copy>
        <copy todir="${install.docs}/main">
            <fileset dir="${cruisecontrol.main}/docs"/>
        </copy>
        <copy todir="${install.docs}/reporting">
            <fileset dir="${cruisecontrol.reporting}/docs"/>
        </copy>
        <copy todir="${install.bin}">
            <fileset file="${cruisecontrol.main}/bin/cruisecontrol.sh"/>
        </copy>
        <copy todir="${install.share}" file="${cruisecontrol.main}/license.txt"/>
        <copy todir="${install.dist}" file="${cruisecontrol.reporting.webapp}"/>

        <mkdir dir="${build.rpm.root}/${reporting.user.log.dir}"/>
        <mkdir dir="${build.rpm.root}/${reporting.cruise.build.artifacts.dir}"/>
        <mkdir dir="${build.rpm.root}/${reporting.cruise.checkout.dir}"/>

    </target>

    <target name="build" description="dummy build target" depends="build.main, build.report"/>

    <target name="build.main" description="builds cruisecontrol main ">
        <ant dir="${cruisecontrol.main}" target="clean" inheritAll="false"/>
        <ant dir="${cruisecontrol.main}" target="jar" inheritAll="false"/>
    </target>

    <target name="build.report" description="builds the cruisecontrol reporting app">
        <copy file="${reporting.override.file}" toDir="${cruisecontrol.reporting}"/>
        <ant dir="${cruisecontrol.reporting}" target="war" inheritAll="false">
            <property name="basedir" value="${cruisecontrol.reporting}"/>
            <property name="checkstyle.fail.on.violation" value="false"/>
        </ant>
    </target>

    <target name="files" depends="install" description="build list of rpm contents, set attributes">

        <echo file="${build.files}" append="false">
		%defattr(-,${config.runtime.user},${config.runtime.group})
		${install.docs}
		${install.share}/
		%dir ${reporting.cruise.build.artifacts.dir}/
		%dir ${reporting.user.spool.root}/
                %dir ${reporting.user.log.dir}/      
                %dir ${reporting.cruise.checkout.dir}/                     
		%attr(0755,${config.runtime.user},${config.runtime.group})${install.bin}/*
        </echo>
        <replace file="${build.files}" token="${build.rpm.root}" value=""/>
    </target>


    <target name="spec" depends="files" description="take the skeleton spec file, replace tokens in it and put it in the right place">
        <echo message="making RPM spec file"/>
        <copy file="${config.spec.src}" tofile="${build.spec}" failonerror="true">
            <filterset begintoken="__" endtoken="__">
                <filter token="FILES" value="${build.files}"/>
                <filter token="NAME" value="${config.name}"/>
                <filter token="RELEASE" value="${config.release}"/>
                <filter token="ROOT" value="${build.rpm.root}"/>
                <filter token="RUNTIME_USER" value="${config.runtime.user}"/>
                <filter token="SRC_DESC" value="${config.desc}"/>
                <filter token="SUMMARY" value="${config.summary}"/>
                <filter token="VERSION" value="${config.version}"/>
                <filter token="WEBAPP_DEST" value="/usr/share/cruisecontrol/dist"/>
                <filter token="WEBAPP" value="${config.webapp}"/>
                <filter token="WEBAPPS_DIR" value="${config.webapps.dir}"/>
            </filterset>
        </copy>
    </target>

    <target name="rpm" description="invokes rpmbuild and makes the RPM file" depends="-init,spec,build">
        <rpm specFile="cruisecontrol.spec" topDir="${build.rpm.root}"/>
    </target>

</project>
